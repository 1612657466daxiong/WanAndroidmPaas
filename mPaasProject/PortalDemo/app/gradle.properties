#打包时查看插件的日志
log=true

#所有校验的总开关，是否跳过各种校验
skipcheck=true

#7zip压缩
sevenZipDeflate=false

#检测Bundle间是否存在循环依赖
checkBundleDependencyCycle=true

#检测Bundle间是否存在重复的类
checkClassDuplicate=true

#检测Bundle的packageId设置是否合法。主要有两点：1、Bundle自身没有资源却占用了packageId，或者有资源却不占用packageId；2、Bundle间，依赖了packageId=27的Budnle，或者有重复packgeId的Bundle
checkBundlePackageId=true

#检测Bundle的导出包
checkBundleExportPackages=true


#是否打devBundle
dev=true


#检测是否依赖了基线中不存在的Bundle
checkBundleDependencyExist=false


#检测Bundle间依赖的版本号
checkBundleDependencyVersion=false


#检测Bundle的InitLevel属性
checkBundleInitLevel=false

#检测native so
checkBundleNativeLibrary=false

#检测Bundle是否进行了hack byte
checkBundleInjectClassVerifier=false


#检测Bundle调用的接口
checkClassInvoke=false

#生成class->bundle映射表，线上使用
classToBundle=false

#生成class->bundle映射表，调试模式
classToBundleDebug=false

#检测Bundle使用的aspect信息
checkAspectInfo=false

#是否需要boost_gradle_home
isAlipayUseBOOST_GRALDE_HOME=false